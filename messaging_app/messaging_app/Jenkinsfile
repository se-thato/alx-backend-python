pipeline {
    agent any

    environment {
        VENV = 'venv'
        DOCKER_IMAGE = 'yourdockerhubusername/messaging_app'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-creds', url: 'https://github.com/yourusername/alx-backend-python.git', branch: 'main'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                cd messaging_app
                python3 -m venv venv
                . venv/bin/activate
                pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                cd messaging_app
                . venv/bin/activate
                pytest --junitxml=report.xml
                '''
            }
        }

        stage('Publish Report') {
            steps {
                junit 'messaging_app/report.xml'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                cd messaging_app
                docker build -t $DOCKER_IMAGE:latest .
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push $DOCKER_IMAGE:latest
                    '''
                }
            }
        }
    }

    triggers {
        // No automatic triggers; manual execution only
    }
}
